package com.model;
// Generated 2018-1-27 18:10:37 by Hibernate Tools 4.3.1.Final

import java.util.Arrays;
import java.util.Collection;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Employees generated by hbm2java
 */
@Entity
@Table(name = "employees", catalog = "employees")
@JsonIgnoreProperties(value={"titleses","salarieses","deptEmps","roles","deptManagers","grantedAuthority"})
public class Employees implements UserDetails {
	
	//用户状态：正常
	public static final String USER_STATUS_ACTIVE = "active";
		//用户状态：禁用
	public static final String USER_STATUS_DISABLE = "disable";

	private int empNo;
	private Date birthDate;
	private String firstName;
	private String lastName;
	private String gender;
	private Date hireDate;
	private String status = USER_STATUS_ACTIVE;
	private Set<Titles> titleses = new HashSet<Titles>(0);
	private Set<Salaries> salarieses = new HashSet<Salaries>(0);
	private Set<DeptEmp> deptEmps = new HashSet<DeptEmp>(0);
	private Set<Role> roles = new HashSet<Role>(0);
	private Set<DeptManager> deptManagers = new HashSet<DeptManager>(0);
	
	// Spring Security 用户授权信息
	@Transient
	private GrantedAuthority[] grantedAuthority;
	
	public Employees() {
	}
	
	
	public Employees(int empNo) {
		super();
		this.empNo = empNo;
	}


	public Employees(int empNo, Date birthDate, String firstName, String lastName, String gender, Date hireDate,
			String status) {
		this.empNo = empNo;
		this.birthDate = birthDate;
		this.firstName = firstName;
		this.lastName = lastName;
		this.gender = gender;
		this.hireDate = hireDate;
		this.status = status;
	}

	public Employees(int empNo, Date birthDate, String firstName, String lastName, String gender, Date hireDate,
			String status, Set<Titles> titleses, Set<Salaries> salarieses, Set<DeptEmp> deptEmps, Set<Role> roles,
			Set<DeptManager> deptManagers) {
		this.empNo = empNo;
		this.birthDate = birthDate;
		this.firstName = firstName;
		this.lastName = lastName;
		this.gender = gender;
		this.hireDate = hireDate;
		this.status = status;
		this.titleses = titleses;
		this.salarieses = salarieses;
		this.deptEmps = deptEmps;
		this.roles = roles;
		this.deptManagers = deptManagers;
	}
	
	@Transient
	public boolean isAccountNonExpired() {
		return true;
	}
	
	@Transient
	public boolean isAccountNonLocked() {
		return true;
	}
	
	@Transient
	public boolean isCredentialsNonExpired() {
		return true;
	}
	
	@Transient
	public boolean isEnabled() {
		return true;
	}
	
	@Transient
	public boolean isDisabled() {
		return this.status.equals(USER_STATUS_DISABLE) ? true : false;
	}
	
	
	@Id
	@Column(name = "emp_no", unique = true, nullable = false)
	public int getEmpNo() {
		return this.empNo;
	}

	public void setEmpNo(int empNo) {
		this.empNo = empNo;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "birth_date", nullable = false, length = 10)
	public Date getBirthDate() {
		return this.birthDate;
	}

	public void setBirthDate(Date birthDate) {
		this.birthDate = birthDate;
	}

	@Column(name = "first_name", nullable = false, length = 14)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", nullable = false, length = 16)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "gender", nullable = false, length = 2)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "hire_date", nullable = false, length = 10)
	public Date getHireDate() {
		return this.hireDate;
	}

	public void setHireDate(Date hireDate) {
		this.hireDate = hireDate;
	}

	@Column(name = "status", nullable = false, length = 10)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employees")
	public Set<Titles> getTitleses() {
		return this.titleses;
	}

	public void setTitleses(Set<Titles> titleses) {
		this.titleses = titleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employees")
	public Set<Salaries> getSalarieses() {
		return this.salarieses;
	}

	public void setSalarieses(Set<Salaries> salarieses) {
		this.salarieses = salarieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employees")
	public Set<DeptEmp> getDeptEmps() {
		return this.deptEmps;
	}

	public void setDeptEmps(Set<DeptEmp> deptEmps) {
		this.deptEmps = deptEmps;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "employee_role", catalog = "employees", joinColumns = {
			@JoinColumn(name = "emp_no", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "roleId", nullable = false, updatable = false) })
	public Set<Role> getRoles() {
		return this.roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employees")
	public Set<DeptManager> getDeptManagers() {
		return this.deptManagers;
	}

	public void setDeptManagers(Set<DeptManager> deptManagers) {
		this.deptManagers = deptManagers;
	}
	
	@Transient
	public GrantedAuthority[] getGrantedAuthority() {
		return grantedAuthority;
	}

	public void setGrantedAuthority(GrantedAuthority[] grantedAuthority) {
		this.grantedAuthority = grantedAuthority;
	}
	
	@JsonIgnore
	@Transient
	public Collection<GrantedAuthority> getAuthorities() {
		return Arrays.asList(grantedAuthority);
	}

	@Override
	@Transient
	public String getPassword() {
		return String.valueOf(this.birthDate).replaceAll("-","");
	}
	
	@Override
	@Transient
	public String getUsername() {
		return String.valueOf(this.empNo);
	}

	@Override
	public String toString() {
		return "Employees [empNo=" + empNo + ", birthDate=" + birthDate + ", firstName=" + firstName + ", lastName="
				+ lastName + ", gender=" + gender + ", hireDate=" + hireDate + ", status=" + status + "]";
	}

	public String toStringforName() {
		return "Employees [empNo=" + empNo + ", firstName=" + firstName + ", lastName=" + lastName + "]";
	}
	
	
	

}
